/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ru.greeneyes.project.pomidoro.modalwindow;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import ru.greeneyes.project.pomidoro.UIBundle;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ResourceBundle;

/**
 * User: dima
 * Date: Nov 29, 2010
 */
class ModalForm {
	public JPanel rootPanel;
	private JLabel messageLabel;
	private final FormModel model;

	public ModalForm(final FormModel model) {
		this.model = model;

		$$$setupUI$$$();

		MouseAdapter mouseAdapter = new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent mouseEvent) {
				if (mouseEvent.getClickCount() == 1) {
					model.userClick();
					updateUI();
				}
			}
		};
		rootPanel.addMouseListener(mouseAdapter);
		messageLabel.addMouseListener(mouseAdapter);

		updateUI();
	}

	private void updateUI() {
		String text = UIBundle.message("modalwindow.tooltip", String.valueOf(model.clicksLeft()));
		rootPanel.setToolTipText(text);
		messageLabel.setToolTipText(text);
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		rootPanel = new javax.swing.JPanel();
		rootPanel.setLayout(new GridLayoutManager(1, 1, new java.awt.Insets(0, 0, 0, 0), -1, -1));
		messageLabel = new javax.swing.JLabel();
		rootPanel.add(messageLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new java.awt.Dimension(0, 0), null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public javax.swing.JComponent $$$getRootComponent$$$() {
		return rootPanel;
	}
}
